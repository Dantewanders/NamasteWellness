{"ast":null,"code":"var _jsxFileName = \"/home/dantewanders/Code/Templates/CapstoneTemplate/ui/src/views/UserProfile/GameHistoryContainer.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from 'react';\nimport GameHistoryCard from './GameHistoryCard';\nimport { getGameHistory } from \"../../utility/api\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameHistoryContainer(props) {\n  _s();\n  const {\n    username,\n    gameMode\n  } = props;\n  const [data, setData] = useState(null);\n  let filteredData = [];\n\n  //query db for games by username and map through the result object and populate game history card\n  useEffect(() => {\n    getGameHistory(username).then(data => setData(data)).catch(error => console.log(error));\n  }, [username]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading...\"\n    }, void 0, false);\n  }\n  switch (gameMode) {\n    case 'All Modes':\n      filteredData = data;\n      break;\n    case \"Quick Play\":\n      filteredData = data.filter(element => element.gameMode === gameMode);\n      break;\n    case \"3 Strikes\":\n      filteredData = data.filter(element => element.gameMode === gameMode);\n      break;\n    case \"Fast 25\":\n      filteredData = data.filter(element => element.gameMode === gameMode);\n      break;\n    default:\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: filteredData.map(element => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(GameHistoryCard, {\n          gameDate: element.gameDate,\n          duration: element.duration,\n          score: element.score,\n          difficulty: element.difficulty,\n          gameMode: element.gameMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(GameHistoryContainer, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = GameHistoryContainer;\nexport default GameHistoryContainer;\nvar _c;\n$RefreshReg$(_c, \"GameHistoryContainer\");","map":{"version":3,"names":["Fragment","GameHistoryCard","getGameHistory","useState","useEffect","_Fragment","jsxDEV","_jsxDEV","GameHistoryContainer","props","_s","username","gameMode","data","setData","filteredData","then","catch","error","console","log","children","filter","element","map","gameDate","duration","score","difficulty","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dantewanders/Code/Templates/CapstoneTemplate/ui/src/views/UserProfile/GameHistoryContainer.js"],"sourcesContent":["import { Fragment } from 'react';\nimport GameHistoryCard from './GameHistoryCard';\nimport { getGameHistory } from \"../../utility/api\";\nimport { useState, useEffect } from \"react\";\n\nfunction GameHistoryContainer( props ) {\n  \n  const {username, gameMode} = props\n\n  const [data, setData] = useState(null)\n\n  let filteredData = []\n\n  //query db for games by username and map through the result object and populate game history card\n  useEffect(() => {\n    getGameHistory(username)\n      .then(data => setData(data))\n      .catch((error) => console.log(error))\n  }, [username])\n  \n  if (!data) {\n    return <>Loading...</>\n  }\n  \n  switch(gameMode) {\n    case 'All Modes':\n      filteredData = data\n      break\n    case \"Quick Play\":\n      filteredData = data.filter(element => element.gameMode === gameMode)\n      break\n    case \"3 Strikes\":\n      filteredData = data.filter(element => element.gameMode === gameMode)\n      break\n    case \"Fast 25\":\n      filteredData = data.filter(element => element.gameMode === gameMode)\n      break\n    default:\n  }\n\n  return (\n\n    <Fragment>\n       {filteredData.map((element) => {\n        return (\n          <div >\n            <GameHistoryCard\n              gameDate={element.gameDate}\n              duration={element.duration}\n              score={element.score}\n              difficulty={element.difficulty}\n              gameMode={element.gameMode}\n            />\n          </div>\n          )\n          })}\n    </Fragment>\n  )\n}\nexport default GameHistoryContainer"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAJ,QAAA,IAAAK,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,oBAAoBA,CAAEC,KAAK,EAAG;EAAAC,EAAA;EAErC,MAAM;IAACC,QAAQ;IAAEC;EAAQ,CAAC,GAAGH,KAAK;EAElC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,IAAIY,YAAY,GAAG,EAAE;;EAErB;EACAX,SAAS,CAAC,MAAM;IACdF,cAAc,CAACS,QAAQ,CAAC,CACrBK,IAAI,CAACH,IAAI,IAAIC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC3BI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACE,IAAI,EAAE;IACT,oBAAON,OAAA,CAAAF,SAAA;MAAAgB,QAAA,EAAE;IAAU,iBAAG;EACxB;EAEA,QAAOT,QAAQ;IACb,KAAK,WAAW;MACdG,YAAY,GAAGF,IAAI;MACnB;IACF,KAAK,YAAY;MACfE,YAAY,GAAGF,IAAI,CAACS,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACX,QAAQ,KAAKA,QAAQ,CAAC;MACpE;IACF,KAAK,WAAW;MACdG,YAAY,GAAGF,IAAI,CAACS,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACX,QAAQ,KAAKA,QAAQ,CAAC;MACpE;IACF,KAAK,SAAS;MACZG,YAAY,GAAGF,IAAI,CAACS,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACX,QAAQ,KAAKA,QAAQ,CAAC;MACpE;IACF;EAAQ;EAGV,oBAEEL,OAAA,CAACP,QAAQ;IAAAqB,QAAA,EACLN,YAAY,CAACS,GAAG,CAAED,OAAO,IAAK;MAC9B,oBACEhB,OAAA;QAAAc,QAAA,eACEd,OAAA,CAACN,eAAe;UACdwB,QAAQ,EAAEF,OAAO,CAACE,QAAS;UAC3BC,QAAQ,EAAEH,OAAO,CAACG,QAAS;UAC3BC,KAAK,EAAEJ,OAAO,CAACI,KAAM;UACrBC,UAAU,EAAEL,OAAO,CAACK,UAAW;UAC/BhB,QAAQ,EAAEW,OAAO,CAACX;QAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC3B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEf;AAACtB,EAAA,CArDQF,oBAAoB;AAAAyB,EAAA,GAApBzB,oBAAoB;AAsD7B,eAAeA,oBAAoB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}