{"ast":null,"code":"var _jsxFileName = \"/home/dantewanders/Code/NamasteWellness/ui/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prepare = () => {\n  if (process.env.NODE_ENV === \"development\") {\n    // prevents the mock server from working in a deployed, production env\n    const {\n      worker\n    } = require(\"./mocks/browser.js\");\n    return worker.start({\n      onUnhandledRequest: \"bypass\"\n    }); // start option removes warnings from msw\n  }\n\n  return Promise.resolve();\n};\nprepare().then(() => {\n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n  root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n});","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","jsxDEV","_jsxDEV","prepare","process","env","NODE_ENV","worker","require","start","onUnhandledRequest","Promise","resolve","then","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/dantewanders/Code/NamasteWellness/ui/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst prepare = () => {\n  if (process.env.NODE_ENV === \"development\") {\n    // prevents the mock server from working in a deployed, production env\n    const { worker } = require(\"./mocks/browser.js\");\n    return worker.start({ onUnhandledRequest: \"bypass\" }); // start option removes warnings from msw\n  }\n  return Promise.resolve();\n};\n\nprepare().then(() => {\n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n  root.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  );\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C;IACA,MAAM;MAAEC;IAAO,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;IAChD,OAAOD,MAAM,CAACE,KAAK,CAAC;MAAEC,kBAAkB,EAAE;IAAS,CAAC,CAAC,CAAC,CAAC;EACzD;;EACA,OAAOC,OAAO,CAACC,OAAO,EAAE;AAC1B,CAAC;AAEDT,OAAO,EAAE,CAACU,IAAI,CAAC,MAAM;EACnB,MAAMC,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;EACjEH,IAAI,CAACI,MAAM,eACThB,OAAA,CAACL,KAAK,CAACsB,UAAU;IAAAC,QAAA,eACflB,OAAA,CAACH,aAAa;MAAAqB,QAAA,eACZlB,OAAA,CAACF,GAAG;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC,CACpB;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}