{"ast":null,"code":"var _jsxFileName = \"/home/dantewanders/Code/NamasteWellness/ui/src/views/Settings/index.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { updatePassword } from \"../../utility/api\";\nimport Button from \"@mui/material/Button\";\nimport { isUserLoggedIn, getToken } from \"../../utility/utils\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n});\n\n//I want to validate the username and password\n//I want to update password in the database\n//I need to connect the update field to the database\n_c2 = Alert;\nfunction Settings(props) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const handleSubmit = async () => {\n    try {\n      const token = getToken();\n      const data = {\n        password: passwordValue\n      };\n      await updatePassword(token, data);\n      setOpen(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      \"& .MuiTextField-root\": {\n        m: 1,\n        width: \"25ch\"\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Update User Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"form\",\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        type: \"password\",\n        sx: {\n          marginBottom: \"5px\"\n        },\n        onChange: password => setPasswordValue(password.target.value),\n        value: passwordValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 6000,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: \"Password Updated Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"zNwfwAax5qGjJTSWvcL7Xt1RRIE=\");\n_c3 = Settings;\nexport default Settings;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alert$forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Settings\");","map":{"version":3,"names":["useState","forwardRef","Box","TextField","updatePassword","Button","isUserLoggedIn","getToken","Snackbar","MuiAlert","jsxDEV","_jsxDEV","Alert","_c","props","ref","elevation","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Settings","_s","open","setOpen","handleClose","event","reason","passwordValue","setPasswordValue","handleSubmit","token","data","password","error","console","log","component","sx","m","width","noValidate","autoComplete","children","className","id","label","type","marginBottom","onChange","target","value","autoHideDuration","onClose","severity","onClick","_c3","$RefreshReg$"],"sources":["/home/dantewanders/Code/NamasteWellness/ui/src/views/Settings/index.js"],"sourcesContent":["import { useState, forwardRef } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { updatePassword } from \"../../utility/api\";\nimport Button from \"@mui/material/Button\";\nimport { isUserLoggedIn, getToken } from \"../../utility/utils\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert =forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n//I want to validate the username and password\n//I want to update password in the database\n//I need to connect the update field to the database\n\nfunction Settings(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const [passwordValue, setPasswordValue] = useState(\"\");\n\n  const handleSubmit = async () => {\n    try {\n      const token = getToken();\n      const data = { password: passwordValue };\n      await updatePassword(token, data);\n      setOpen(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <h1> Update User Password </h1>\n        <TextField\n          className=\"form\"\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          sx={{ marginBottom: \"5px\" }}\n          onChange={(password) => setPasswordValue(password.target.value)}\n          value={passwordValue}\n        />\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n          Password Updated Successfully!\n        </Alert>\n      </Snackbar>\n      </div>\n\n      <Button onClick={handleSubmit}>Submit</Button>\n    </Box>\n  );\n}\n\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}