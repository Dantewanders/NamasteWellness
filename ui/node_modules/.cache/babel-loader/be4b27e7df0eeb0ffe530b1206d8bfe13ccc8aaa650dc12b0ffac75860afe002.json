{"ast":null,"code":"//The base url of the API, can be changed in the .env file\nconst baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:9000';\n\n/**\n * Sends a login request to the api for a user with the provided username and password.\n *\n * @async\n * @function\n * @param {Object} data - An object containing the user's login credentials.\n * @param {string} data.username - The user's username.\n * @param {string} data.password - The user's password.\n * @returns {Promise<Object>} - A promise that resolves with the user's data.\n * @throws {Error} - Throws an error if there was an issue with the login request.\n */\nexport const login = async data => {\n  const {\n    username,\n    password\n  } = data;\n  const response = await fetch(`${baseUrl}/auth/login`, {\n    method: \"POST\",\n    headers: new Headers({\n      \"Authorization\": `Basic ${btoa(`${username}:${password}`)}` //btoa is only deprecated in Node.js not in browser environments!\n    })\n  });\n\n  const responseData = await response.json();\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response === null || response === void 0 ? void 0 : response.status} - ${responseData === null || responseData === void 0 ? void 0 : responseData.message}`);\n  }\n  return responseData;\n};\n\n/**\n * Sends a registration request to the api for a user with the provided data.\n *\n * @async\n * @function\n * @param {Object} data - An object containing the user's data require to create an account.\n * @param {string} data.username - The user's username\n * @param {string} data.password - The user's password  \n * @param {*} data.[...] - Any additional user data required for account creation\n * @returns {Promise<Object>} - A promise that resolves with the user's data.\n * @throws {Error} - Throws an error if there was an issue with the login request.\n */\nexport const register = async data => {\n  const response = await fetch(`${baseUrl}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  const responseData = await response.json();\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response === null || response === void 0 ? void 0 : response.status} - ${responseData === null || responseData === void 0 ? void 0 : responseData.message}`);\n  }\n  return responseData;\n};\nexport const getUserProfile = async username => {\n  console.log(`${baseUrl}/user/${username}`);\n  const response = await fetch(`${baseUrl}/user/username/${username}`, {\n    method: \"GET\"\n  });\n  const responseData = await response.json();\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response === null || response === void 0 ? void 0 : response.status} - ${responseData === null || responseData === void 0 ? void 0 : responseData.message}`);\n  }\n  return responseData;\n};\nexport const getUser = async token => {\n  const response = await fetch(`${baseUrl}/user/token`, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const responseData = await response.json();\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response === null || response === void 0 ? void 0 : response.status} - ${responseData === null || responseData === void 0 ? void 0 : responseData.message}`);\n  }\n  return responseData;\n};\nexport const updatePassword = async (token, data) => {\n  const response = await fetch(`${baseUrl}/auth/updatePassword`, {\n    method: \"post\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  const responseData = await response.json();\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response === null || response === void 0 ? void 0 : response.status} - ${responseData === null || responseData === void 0 ? void 0 : responseData.message}`);\n  }\n  return responseData;\n};","map":{"version":3,"names":["baseUrl","process","env","REACT_APP_API_URL","login","data","username","password","response","fetch","method","headers","Headers","btoa","responseData","json","ok","Error","status","message","register","body","JSON","stringify","getUserProfile","console","log","getUser","token","updatePassword"],"sources":["/home/dantewanders/Code/Templates/CapstoneTemplate/ui/src/utility/api.js"],"sourcesContent":["//The base url of the API, can be changed in the .env file\nconst baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:9000'\n\n\n/**\n * Sends a login request to the api for a user with the provided username and password.\n *\n * @async\n * @function\n * @param {Object} data - An object containing the user's login credentials.\n * @param {string} data.username - The user's username.\n * @param {string} data.password - The user's password.\n * @returns {Promise<Object>} - A promise that resolves with the user's data.\n * @throws {Error} - Throws an error if there was an issue with the login request.\n */\nexport const login = async (data) => {\n  \n  const {\n    username,\n    password\n  } = data\n\n  const response = await fetch(`${baseUrl}/auth/login`, {\n    method: \"POST\",\n    headers: new Headers({\n      \"Authorization\": `Basic ${btoa(`${username}:${password}`)}` //btoa is only deprecated in Node.js not in browser environments!\n    }),\n  })\n\n  const responseData = await response.json()\n\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response?.status} - ${responseData?.message}`)\n  }\n\n  return responseData\n}\n\n/**\n * Sends a registration request to the api for a user with the provided data.\n *\n * @async\n * @function\n * @param {Object} data - An object containing the user's data require to create an account.\n * @param {string} data.username - The user's username\n * @param {string} data.password - The user's password  \n * @param {*} data.[...] - Any additional user data required for account creation\n * @returns {Promise<Object>} - A promise that resolves with the user's data.\n * @throws {Error} - Throws an error if there was an issue with the login request.\n */\nexport const register = async(data) => {\n\n  const response = await fetch(`${baseUrl}/auth/register`, {\n    method: \"POST\", \n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(data),\n  })\n\n  const responseData = await response.json()\n\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response?.status} - ${responseData?.message}`)\n  }\n\n  return responseData\n}\n\nexport const getUserProfile = async (username) => {\n\n  console.log(`${baseUrl}/user/${username}`)\n  const response = await fetch(`${baseUrl}/user/username/${username}`, {\n    method: \"GET\",\n  })\n\n  const responseData = await response.json()\n\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response?.status} - ${responseData?.message}`)\n  }\n\n  return responseData\n}\n\nexport const getUser = async(token) => {\n\n  const response = await fetch(`${baseUrl}/user/token`, {\n    method: \"GET\", \n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n  })\n\n  const responseData = await response.json()\n\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response?.status} - ${responseData?.message}`)\n  }\n  \n  return responseData\n}\n\nexport const updatePassword = async(token, data) => {\n\n  const response = await fetch(`${baseUrl}/auth/updatePassword`, {\n    method: \"post\", \n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(data),\n  })\n\n  const responseData = await response.json()\n\n  if (!response.ok) {\n    throw new Error(`Status Code: ${response?.status} - ${responseData?.message}`)\n  }\n  \n  return responseData\n}\n\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAGxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,IAAI,IAAK;EAEnC,MAAM;IACJC,QAAQ;IACRC;EACF,CAAC,GAAGF,IAAI;EAER,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,aAAY,EAAE;IACpDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,IAAIC,OAAO,CAAC;MACnB,eAAe,EAAG,SAAQC,IAAI,CAAE,GAAEP,QAAS,IAAGC,QAAS,EAAC,CAAE,EAAC,CAAC;IAC9D,CAAC;EACH,CAAC,CAAC;;EAEF,MAAMO,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAE1C,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,gBAAeT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,MAAO,MAAKJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,OAAQ,EAAC,CAAC;EAChF;EAEA,OAAOL,YAAY;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMM,QAAQ,GAAG,MAAMf,IAAI,IAAK;EAErC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,gBAAe,EAAE;IACvDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMS,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAE1C,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,gBAAeT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,MAAO,MAAKJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,OAAQ,EAAC,CAAC;EAChF;EAEA,OAAOL,YAAY;AACrB,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAOlB,QAAQ,IAAK;EAEhDmB,OAAO,CAACC,GAAG,CAAE,GAAE1B,OAAQ,SAAQM,QAAS,EAAC,CAAC;EAC1C,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,kBAAiBM,QAAS,EAAC,EAAE;IACnEI,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMI,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAE1C,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,gBAAeT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,MAAO,MAAKJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,OAAQ,EAAC,CAAC;EAChF;EAEA,OAAOL,YAAY;AACrB,CAAC;AAED,OAAO,MAAMa,OAAO,GAAG,MAAMC,KAAK,IAAK;EAErC,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,aAAY,EAAE;IACpDU,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASiB,KAAM;IACnC;EACF,CAAC,CAAC;EAEF,MAAMd,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAE1C,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,gBAAeT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,MAAO,MAAKJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,OAAQ,EAAC,CAAC;EAChF;EAEA,OAAOL,YAAY;AACrB,CAAC;AAED,OAAO,MAAMe,cAAc,GAAG,MAAAA,CAAMD,KAAK,EAAEvB,IAAI,KAAK;EAElD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,sBAAqB,EAAE;IAC7DU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASiB,KAAM;IACnC,CAAC;IACDP,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMS,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAE1C,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,gBAAeT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,MAAO,MAAKJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,OAAQ,EAAC,CAAC;EAChF;EAEA,OAAOL,YAAY;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}